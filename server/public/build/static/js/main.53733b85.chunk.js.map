{"version":3,"sources":["assets/defaultposter.png","services/CommonTypes.ts","pages/Home.tsx","components/MovieTable.tsx","services/MovieService.ts","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","components/ImgUploader.tsx","components/MovieForm.tsx","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","pages/Layout.tsx","redux/reducer/MovieReducer.ts","redux/reducer/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","SwitchType","react_default","a","createElement","React","Component","this","props","onLoad","_this","style","padding","input","marginBottom","display","value","condition","key","onChange","e","onKeyChange","target","onPressEnter","onSearch","es_button","type","icon","size","width","marginRight","onClick","_this2","title","dataIndex","render","poster","className","src","alt","defaultposterImg","filterDropdown","getFilterDropDown","bind","filterIcon","text","record","join","timeLong","isHot","es_switch","checked","newVal","onSwitchChange","_id","isComing","isClassic","id","react_router_dom","to","popconfirm","onConfirm","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onDelete","message","success","stop","okText","cancelText","total","current","page","pageSize","limit","pagination","table","rowKey","dataSource","data","columns","getColumns","getPageConfig","handleChange","loading","isLoading","MovieService","classCallCheck","createClass","_add","movie","_ref","axios","post","sent","abrupt","_x","apply","arguments","_edit","_callee2","_ref2","_context2","put","_x2","_x3","_delete2","_callee3","_ref3","_context3","delete","_x4","_getMovieById","_callee4","_ref4","_context4","get","_x5","_getMovies","_callee5","_ref5","_context5","params","_x6","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","MovieAction","fetchMovies","dispatch","getState","curCondition","resp","getMovies","deleteMovie","changeSwitch","edit","defineProperty","connect","state","newState","_onDelete","newPage","MovieTable","showModal","uid","name","url","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","json","err","error","upload","accept","listType","fileList","getFileList","customRequest","handleRequest","onRemove","onPreview","setState","getUploadContent","modal","visible","footer","onCancel","formItemLayout","labelCol","span","wrapperCol","offset","AllAreas","label","AreaGroups","Checkbox","Group","AllTypes","TypeGroups","MovieForm","preventDefault","form","validateFields","errors","result","getFieldsValue","console","log","onSubmit","history","push","getFieldDecorator","es_form","assign","handleSubmit","Item","rules","required","ImgUploader_default","options","input_number","min","step","initialValue","valuePropName","TextArea_default","htmlType","withRouter","Form","create","mapPropsToFields","obj","createFormField","getDefaultField","components_MovieForm","add","undefined","getMovieById","match","Header","Layout","Sider","Content","_Layout","layout","menu","mode","theme","react_router","path","component","Home","exact","MovieList","AddMovie","EditMovie","defaultState","totalPage","rootReducer","combineReducers","length","objectSpread","filter","m","Math","ceil","saveMovie","setCondition","setLoading","find","d","newMovie","newData","map","store","createStore","applyMiddleware","thunk","logger","App","es","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.53733b85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultposter.b4e877ba.png\";","export interface IResponseError {\r\n  err: string;\r\n  data: null;\r\n}\r\n\r\nexport interface IResponseData<T> {\r\n  err: \"\";\r\n  data: T;\r\n}\r\n\r\nexport interface IResponsePageData<T> {\r\n  err: \"\";\r\n  total: number;\r\n  data: T[];\r\n}\r\n\r\nexport interface ISearchCondition {\r\n  page?: number;\r\n  limit?: number;\r\n  key?: string;\r\n}\r\n\r\nexport enum SwitchType {\r\n  isHot = \"isHot\",\r\n  isComing = \"isComing\",\r\n  isClassic = \"isClassic\",\r\n}\r\n","import React from 'react'\r\nimport ImgUploader from '../components/ImgUploader'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>\r\n                电影管理系统\r\n            </h1>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { IMovieState } from '../redux/reducer/MovieReducer'\r\nimport { Table, Switch, Button, message, Popconfirm, Icon, Input } from 'antd'\r\nimport { ColumnProps, PaginationConfig } from 'antd/lib/table'\r\nimport { IMovie } from '../services/MovieService'\r\nimport defaultposterImg from '../assets/defaultposter.png'\r\nimport { SwitchType } from '../services/CommonTypes'\r\nimport { NavLink } from 'react-router-dom'\r\nexport interface IMovieTableEvents {\r\n    /**\r\n     * 完成加载之后的事件\r\n     */\r\n    onLoad: () => void\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void\r\n    onDelete: (id: string) => Promise<void>\r\n    onChange: (newPage: number) => void\r\n    onKeyChange: (key: string) => void\r\n    onSearch: () => void\r\n}\r\n\r\nexport default class extends React.Component<IMovieState & IMovieTableEvents> {// 交叉类型\r\n    componentDidMount() {\r\n        // console.log(this.props)//属性不一定来自仓库，写代码不要像仓库\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad()\r\n        }\r\n    }\r\n    private getFilterDropDown(p: Object) {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                    value={this.props.condition.key}\r\n                    onChange={e => {\r\n                        this.props.onKeyChange(e.target.value)\r\n                    }}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon=\"search\"\r\n                    size=\"small\"\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    搜索\r\n                </Button>\r\n                <Button size=\"small\" style={{ width: 90 }}\r\n\r\n                    onClick={() => {\r\n                        this.props.onKeyChange(\"\")\r\n                        this.props.onSearch()\r\n                    }}>\r\n                    重置\r\n                </Button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getColumns(): ColumnProps<IMovie>[] {\r\n        return [\r\n            {\r\n                title: \"封面图\",\r\n                dataIndex: \"poster\",\r\n                render: poster => {\r\n                    if (poster) {\r\n                        return <img className=\"tablePoster\" src={poster} alt=\"\" />\r\n                    } else {\r\n                        return <img className=\"tablePoster\" src={defaultposterImg} alt=\"\" />\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: \"名称\", dataIndex: \"name\", filterDropdown: this.getFilterDropDown.bind(this),\r\n                filterIcon: <Icon type=\"search\" />,\r\n            },\r\n            // dataIndex转到定义：改一下获得智能提示dataIndex ?: keyof T;\r\n            {\r\n                title: \"地区\",\r\n                dataIndex: \"areas\",\r\n\r\n                render: (text: string[], record) => {\r\n                    // console.log(text, record)\r\n                    return text.join(', ')\r\n                }\r\n            },\r\n            {\r\n                title: \"类型\",\r\n                dataIndex: \"types\",\r\n                render: (text: string[], record) => {\r\n                    return text.join(', ')\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\",\r\n                dataIndex: \"timeLong\",\r\n                render(timeLong) {\r\n                    return timeLong + '分钟'\r\n                }\r\n            }\r\n            ,\r\n            {\r\n                title: \"正在热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        // checked保证是否选中始终和isHot一致，受控\r\n                        this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!,)//加上！：去掉警告，因为不可能是undefined\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!,)//加上！：去掉警告，因为不可能是undefined\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!,)//加上！：去掉警告，因为不可能是undefined\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id: string) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink to={'/movie/edit/' + id}>\r\n                                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n                            </NavLink>\r\n                            <Popconfirm title=\"真的要删除吗？\" onConfirm={async () => {\r\n                                await this.props.onDelete(id)\r\n                                message.success('删除成功')\r\n                            }} okText=\"确定\" cancelText=\"取消\">\r\n                                <Button type=\"danger\" size=\"small\" >删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n\r\n        ]\r\n    }\r\n    getPageConfig(): PaginationConfig | false {\r\n        if (this.props.total === 0) {\r\n            return false\r\n        }\r\n        return {\r\n            current: this.props.condition.page,\r\n            pageSize: this.props.condition.limit,\r\n            total: this.props.total\r\n        }\r\n    }\r\n    handleChange(pagination: PaginationConfig) {\r\n        // console.log(pagination)\r\n        this.props.onChange(pagination.current!)//! 表示不可能是undefined\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table rowKey='_id' dataSource={this.props.data} columns={this.getColumns()}\r\n                    pagination={this.getPageConfig()}\r\n                    onChange={this.handleChange.bind(this)}\r\n                    loading={this.props.isLoading}\r\n                ></Table>\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\nimport {\r\n  IResponseData,\r\n  IResponseError,\r\n  ISearchCondition,\r\n  IResponsePageData,\r\n} from \"./CommonTypes\";\r\nexport interface IMovie {\r\n  _id?: string;\r\n  name: string;\r\n  types: string[];\r\n  areas: string[];\r\n  timeLong: number;\r\n  isHot: boolean;\r\n  isComing: boolean;\r\n  isClassic: boolean;\r\n  description?: string;\r\n  poster?: string;\r\n}\r\n\r\nexport class MovieService {\r\n  public static async add(\r\n    movie: IMovie\r\n  ): Promise<IResponseData<IMovie> | IResponseError> {\r\n    const { data } = await axios.post(\"/api/movie\", movie);\r\n    return data;\r\n  }\r\n\r\n  public static async edit(\r\n    id: string,\r\n    movie: Partial<IMovie> //类型验算：所有属性全部可选\r\n  ): Promise<IResponseData<true> | IResponseError> {\r\n    const { data } = await axios.put(\"/api/movie/\" + id, movie);\r\n    return data;\r\n  }\r\n\r\n  public static async delete(\r\n    id: string\r\n  ): Promise<IResponseData<true> | IResponseError> {\r\n    const { data } = await axios.delete(\"/api/movie/\" + id);\r\n    return data;\r\n  }\r\n\r\n  public static async getMovieById(\r\n    id: string\r\n  ): Promise<IResponseData<IMovie | null>> {\r\n    const { data } = await axios.get(\"/api/movie/\" + id);\r\n    return data;\r\n  }\r\n\r\n  public static async getMovies(\r\n    condition: ISearchCondition\r\n  ): Promise<IResponsePageData<IMovie>> {\r\n    // return new Promise((resolve) => {\r\n    //   // 这段代码主要为了展示加载效果\r\n    //   setTimeout(async () => {\r\n    //     const { data } = await axios.get(\"/api/movie\", {\r\n    //       params: condition,\r\n    //     });\r\n    //     resolve(data);\r\n    //   }, 1500);\r\n    // });\r\n    const { data } = await axios.get(\"/api/movie\", {\r\n      params: condition,\r\n    });\r\n    return data;\r\n  }\r\n}\r\n","// action创建函数\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\nimport { IRootState } from \"../reducer/RootReducer\";\r\nimport { IAction } from \"./ActionTypes\";\r\n\r\nexport type SaveMoviesAction = IAction<\r\n  \"movies_save\",\r\n  {\r\n    movies: IMovie[];\r\n    total: number;\r\n  }\r\n>;\r\n// 相当于\r\n// type saveMoviesAction = {\r\n//   type: \"movies_save\";\r\n//   payload: {\r\n//     movies: IMovie[];\r\n//     total: number;\r\n//   };\r\n// };\r\n// 以前的写法：但是没有类型检查\r\n/* export function saveMoviesAction(movies, total) {\r\n  return {\r\n    type: \"movie_save\",\r\n    payload: {\r\n      movies,\r\n      total,\r\n    },\r\n  };\r\n} */\r\n// 加上ts\r\n// 每个action必须有一个type和payload\r\nfunction saveMoviesAction(movies: IMovie[], total: number): SaveMoviesAction {\r\n  return {\r\n    type: \"movies_save\",\r\n    payload: {\r\n      movies,\r\n      total,\r\n    },\r\n  };\r\n}\r\nexport type SetLoadingAction = IAction<\"movies_setLoading\", boolean>;\r\nfunction setLoadingAction(isLoading: boolean): SetLoadingAction {\r\n  return {\r\n    type: \"movies_setLoading\",\r\n    payload: isLoading,\r\n  };\r\n}\r\nexport type SetConditionAction = IAction<\r\n  \"movie_setCondition\",\r\n  ISearchCondition\r\n>;\r\nfunction setConditionAction(condition: ISearchCondition): SetConditionAction {\r\n  return {\r\n    type: \"movie_setCondition\",\r\n    payload: condition,\r\n  };\r\n}\r\nexport type DeleteAction = IAction<\"movie_delete\", string>;\r\nfunction deleteAction(id: string): DeleteAction {\r\n  return {\r\n    type: \"movie_delete\",\r\n    payload: id,\r\n  };\r\n}\r\n/**\r\n * 根据条件从服务器获取电影数据\r\n */\r\nfunction fetchMovies(\r\n  condition: ISearchCondition\r\n): ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n  // R函数返回值；\r\n  // S整个网站的根状态；\r\n  // E 额外参数，不需要\r\n  // A action类型\r\n  return async (dispatch, getState) => {\r\n    // 1. 设置加载状态\r\n    dispatch(setLoadingAction(true));\r\n    // 2. 设置条件\r\n    dispatch(setConditionAction(condition));\r\n    // 3. 获取服务器数据\r\n    const curCondition = getState().movie.condition;\r\n    const resp = await MovieService.getMovies(curCondition);\r\n    // 这里不能直接按照condition查询，因为会导致参数缺失，应该用这里的condition覆盖原有condition\r\n    //  4. 更改仓库数据\r\n    dispatch(saveMoviesAction(resp.data, resp.total));\r\n    // 关闭加载状态\r\n    dispatch(setLoadingAction(false));\r\n  };\r\n}\r\nfunction deleteMovie(\r\n  id: string\r\n): ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n  return async (dispatch) => {\r\n    dispatch(setLoadingAction(true));\r\n    await MovieService.delete(id);\r\n    dispatch(deleteAction(id)); //删除本地仓库中的数据\r\n    dispatch(setLoadingAction(false));\r\n  };\r\n}\r\nfunction changeSwitch(\r\n  type: SwitchType,\r\n  newVal: boolean,\r\n  id: string\r\n): ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n  return async (dispatch) => {\r\n    dispatch(changeSwitchAction(type, newVal, id));\r\n    await MovieService.edit(id, {\r\n      [type]: newVal, //修改的时候想写多少就写多少，不需要全部写上，所以需要类型演算\r\n    });\r\n  };\r\n}\r\nexport type MovieChangeSwitchAction = IAction<\r\n  \"movie_switch\",\r\n  {\r\n    type: SwitchType;\r\n    newVal: boolean;\r\n    id: string;\r\n  }\r\n>;\r\nfunction changeSwitchAction(\r\n  type: SwitchType,\r\n  newVal: boolean,\r\n  id: string\r\n): MovieChangeSwitchAction {\r\n  return {\r\n    type: \"movie_switch\",\r\n    payload: {\r\n      type,\r\n      newVal,\r\n      id,\r\n    },\r\n  };\r\n}\r\nexport type MovieActions =\r\n  | SaveMoviesAction\r\n  | SetConditionAction\r\n  | SetLoadingAction\r\n  | DeleteAction\r\n  | MovieChangeSwitchAction;\r\nexport default {\r\n  saveMoviesAction,\r\n  setLoadingAction,\r\n  setConditionAction,\r\n  deleteAction,\r\n  fetchMovies,\r\n  deleteMovie,\r\n  changeSwitchAction,\r\n  changeSwitch,\r\n};\r\n","import React, { Dispatch } from 'react'\r\nimport MovieTable from '../../components/MovieTable'\r\nimport { connect } from 'react-redux'\r\nimport { IRootState } from '../../redux/reducer/RootReducer'\r\nimport MovieAction from '../../redux/actions/MovieAction';\r\nimport { IMovieState } from '../../redux/reducer/MovieReducer';\r\nimport { IMovieTableEvents } from '../../components/MovieTable';// 坑：没有加括号导入会出错\r\nfunction mapStateToProps(state: IRootState): IMovieState {\r\n    // 映射属性\r\n    return state.movie;\r\n}\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): IMovieTableEvents {\r\n    // 映射事件\r\n    return {\r\n        onLoad() {\r\n            dispatch(MovieAction.fetchMovies({\r\n                // 默认值\r\n                page: 1,\r\n                limit: 10,\r\n                key: \"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type, newState, id) {\r\n            dispatch(MovieAction.changeSwitch(type, newState, id))\r\n        }\r\n        ,\r\n        async onDelete(id) {\r\n            await dispatch(MovieAction.deleteMovie(id))\r\n        }\r\n        ,\r\n        onChange(newPage) {\r\n            dispatch(MovieAction.fetchMovies({\r\n                page: newPage\r\n            }))\r\n        },\r\n        onKeyChange(key) {\r\n            dispatch(MovieAction.setConditionAction({\r\n                key\r\n            }))\r\n        },\r\n        onSearch() {\r\n            dispatch(MovieAction.fetchMovies({\r\n                page: 1//回到第一页\r\n            }))\r\n        }\r\n    }\r\n}\r\n// const HOC = connect(mapStateToProps)\r\n// const MovieContainer = HOC(MovieTable)\r\n// export default class extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <MovieContainer />\r\n//         )\r\n//     }\r\n// }\r\n// 简化\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieTable)\r\n// 仓库里面有数据，但是没有界面\r\n// MovieTable里面有界面，但是没有数据\r\n// react-redux\r\n\r\n","import { Icon, message, Modal, Upload } from 'antd'\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\nimport React from 'react'\r\nimport { IResponseData, IResponseError } from '../services/CommonTypes';\r\n\r\ninterface IImgUploaderProps {\r\n    value?: string\r\n    onChange?: (imgUrl: string) => void;\r\n}\r\ninterface IImgState {\r\n    showModal: boolean\r\n}\r\nexport default class extends React.Component<IImgUploaderProps, IImgState> {\r\n    state: IImgState = {\r\n        showModal: false\r\n    }\r\n    private getUploadContent() {\r\n        if (this.props.value) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div >\r\n                    <Icon type=\"plus\" />\r\n                    <div>点击上传</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    private getFileList(): UploadFile[] {\r\n        if (this.props.value) {\r\n            return [\r\n                {\r\n                    uid: this.props.value,\r\n                    name: this.props.value,\r\n                    url: this.props.value\r\n                }\r\n            ]\r\n        }\r\n        return []\r\n    }\r\n    // handleChange(info) {\r\n    //     // console.log(info)\r\n    //     // 有坑\r\n    // }\r\n    /**\r\n     * 需要手动编写处理函数\r\n     * @param p \r\n     */\r\n    async handleRequest(p: any) {\r\n        // console.log(p)\r\n        let formData = new FormData()\r\n        formData.append(p.filename, p.file)// 键 值\r\n        // fetchapi\r\n        const request = new Request(p.action, {\r\n            method: \"post\",\r\n            body: formData\r\n        })\r\n        const resp: IResponseData<string> | IResponseError = await fetch(request).then(resp => resp.json())\r\n        // console.log(resp)\r\n        if (resp.err) {\r\n            // 有错误\r\n            message.error('上传失败')\r\n        } else {\r\n            // 触发回调\r\n            if (this.props.onChange) {\r\n                this.props.onChange(resp.data!)// !:去掉null\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    action=\"/api/upload\"\r\n                    name=\"imgfile\"// 要和后端键名相匹配\r\n                    accept=\".jpg,.png,.gif\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.getFileList()}\r\n                    customRequest={this.handleRequest.bind(this)}\r\n                    // onChange={this.handleChange.bind(this)}\r\n                    onRemove={() => {\r\n                        if (this.props.onChange) {\r\n                            this.props.onChange(\"\")\r\n                        }\r\n                    }}\r\n                    onPreview={() => {\r\n                        this.setState({\r\n                            showModal: true\r\n                        })\r\n                    }}\r\n                >\r\n                    {this.getUploadContent()}\r\n                </Upload>\r\n                <Modal\r\n                    visible={this.state.showModal}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            showModal: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Button, Form, Input, InputNumber, message, Switch } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/lib/form/Form';\r\nimport React from 'react'\r\nimport { IMovie } from '../services/MovieService';\r\nimport ImgUploader from './ImgUploader';\r\nimport { Checkbox } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\ninterface IFormProp extends RouteComponentProps<any> {\r\n    form: WrappedFormUtils<any>\r\n    onSubmit: (movie: IMovie) => Promise<string>//成功还是失败\r\n    movie?: IMovie// 处理修改电影\r\n}\r\n\r\nconst formItemLayout = {\r\n    // 让文本框和文本在同一行\r\n    labelCol: {\r\n        span: 4\r\n    },\r\n    wrapperCol: {\r\n        span: 19,\r\n        offset: 1\r\n    }\r\n\r\n}\r\nconst AllAreas: { label: string, value: string }[] = [\r\n    { label: '中国大陆', value: \"中国大陆\" },\r\n    { label: '美国', value: \"美国\" },\r\n    { label: '中国台湾', value: \"中国台湾\" },\r\n    { label: '中国香港', value: \"中国香港\" }\r\n]\r\nconst AreaGroups = Checkbox.Group\r\n\r\nconst AllTypes: { label: string, value: string }[] = [\r\n    { label: '喜剧', value: \"喜剧\" },\r\n    { label: '灾难', value: \"灾难\" },\r\n    { label: '爱情', value: \"爱情\" },\r\n    { label: '动作', value: \"动作\" }\r\n]\r\nconst TypeGroups = Checkbox.Group\r\n\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n    private handleSubmit(e: React.FormEvent<any>) {\r\n        e.preventDefault()\r\n        // 获取表单数据\r\n        this.props.form.validateFields(async errors => {\r\n            // console.log(errors)\r\n            if (!errors) {\r\n                const formData = this.props.form.getFieldsValue()\r\n                console.log(formData)// 获取到属性名是name。why？因为getFieldDecorator\r\n                // 抛出事件让外部处理\r\n                const result = await this.props.onSubmit(formData as IMovie)\r\n                if (result) {\r\n                    message.error(result)\r\n                } else {\r\n                    message.success('处理成功', 1, () => {\r\n                        // 跳转页面\r\n                        // this.props.history 没有history\r\n                        // 这时候需要withRouter高阶函数,并且用RouteComponentProps声明一下\r\n                        // 但是这时候AddMovie有报错了，报错说没有传递以下属性: history, location, match\r\n                        // 原因是export default Form.create<IFormProp>()(withRouter(MovieForm));的时候，IFormProp不知道有\r\n                        // withRouter包装，简单解决方案是withRouter包装在外面\r\n                        this.props.history.push('/movie')\r\n\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    render() {\r\n        // console.log(this.props)//没有类型检查，需要加上IFormProp接口\r\n        // this.props.form.\r\n        // 处理第三方库的类型检查能力\r\n        const { getFieldDecorator } = this.props.form;\r\n        return <Form onSubmit={this.handleSubmit.bind(this)} {...formItemLayout} style={{ width: \"400px\" }}>\r\n            <Form.Item label=\"电影名称\"\r\n            >\r\n\r\n                {/* {getFieldDecorator(配置)(\r\n                    <Input />\r\n                )} */}\r\n                {getFieldDecorator<IMovie>(\"name\", {\r\n                    // 第二个参数配置验证表单规则\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '请填写电影名称'\r\n                    }]\r\n                })(\r\n                    <Input />\r\n                    // Input会被高阶组件所控制\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"封面图\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"poster\", {})(\r\n                    <ImgUploader />\r\n                    // 这里报错，因为需要传递一个value属性，这里我明确知道getFieldDecorator会给ImgUploader注入value属性，所以不用传递\r\n                    // 如果是需要传别的属性，需要额外配置\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"地区\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"areas\", {\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '请选择地区'\r\n                    }]\r\n                })(\r\n                    <AreaGroups options={AllAreas} />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"类型\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"types\", {\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '请选择类型'\r\n                    }]\r\n                })(\r\n                    <TypeGroups options={AllTypes} />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"时长(分钟)\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"timeLong\", {\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '请填写时长'\r\n                    }]\r\n                })(\r\n                    <InputNumber min={1} step={10} />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"正在热映\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"isHot\", { initialValue: false, valuePropName: \"checked\" })(\r\n                    <Switch />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"即将上映\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"isComing\", { initialValue: false, valuePropName: \"checked\" })(\r\n                    <Switch />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"经典影片\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"isClassic\", {\r\n                    initialValue: false\r\n                    // anti有个坑，没有填，直接提交，没有填写的数据为undefined，必须改动之后才有值\r\n                    // 解决：赋一个初始默认值\r\n                    // getFieldDecorator-f12-第二个参数f12->initialValue初始值\r\n                    // 可见，ts的方便\r\n                    , valuePropName: \"checked\"\r\n                })(\r\n                    <Switch />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"描述\"\r\n            >\r\n                {getFieldDecorator<IMovie>(\"description\", {})(\r\n                    <TextArea />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item\r\n                labelCol={{ span: 0 }}\r\n                wrapperCol={{ span: 19, offset: 5 }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                {/* htmlType=\"submit\"表示表单提交功能按钮才能真正触发提交事件 */}\r\n            </Form.Item>\r\n        </Form>\r\n    }\r\n}\r\n\r\n\r\n\r\ntype MovieField = {\r\n    // [P in keyof IMovie]: any\r\n    // 这里如果我想去掉_id呢\r\n    [P in Exclude<keyof IMovie, \"_id\">]: any\r\n\r\n}\r\nfunction getDefaultField(movie: IMovie): MovieField {\r\n    // 回顾类型验算\r\n    // {\r\n    //     name:string\r\n    //     types:string[]\r\n    // }\r\n    // ---->\r\n    // {\r\n    //     name:any\r\n    //     types:any\r\n    // }\r\n    const obj: any = {}\r\n    for (const key in movie) {\r\n        obj[key] = Form.createFormField({\r\n            value: movie[key]\r\n        })\r\n    }\r\n    return obj;\r\n}\r\nexport default withRouter(Form.create<IFormProp>(\r\n\r\n    {\r\n        mapPropsToFields: props => {\r\n            if (props.movie) {\r\n                // 有值，说明做编辑\r\n                // return {\r\n                // 表单的数据回填\r\n                // name: Form.createFormField({\r\n                //     // value: 'asd'\r\n                //     value: props.movie.name\r\n                //     // 接下来体力活，我来简化他\r\n                //     // 写个函数，帮我生成这个对象\r\n                // })\r\n                // }\r\n                return getDefaultField(props.movie)\r\n            }\r\n            // 没值，说明做添加\r\n\r\n        }\r\n    }\r\n)((MovieForm)));\r\n// 小bug：\r\n// 把值设置到组件上，设置的是value属性\r\n// 但是Switch的组件没有value属性，所以编辑的时候默认值会变化\r\n// switch组件应该是checked属性","import React from 'react'\r\nimport MovieForm from '../../components/MovieForm'\r\nimport { MovieService } from '../../services/MovieService'\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <MovieForm onSubmit={async (movie) => {\r\n                const resp = await MovieService.add(movie)\r\n                if (resp.data) {\r\n                    // 成功了\r\n                    return ''\r\n                } else {\r\n                    return resp.err\r\n                }\r\n                // return '错了'\r\n                // return ''\r\n            }} />\r\n\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport MovieForm from '../../components/MovieForm'\r\nimport { IMovie, MovieService } from '../../services/MovieService'\r\n\r\n// 属性的泛型\r\ninterface IParams {\r\n    id: string\r\n}\r\n// 状态的泛型\r\ninterface EditPageState {\r\n    movie?: IMovie\r\n}\r\nexport default class extends React.Component<RouteComponentProps<IParams>, EditPageState> {\r\n    state: EditPageState = {\r\n        // 这里也约束一下，防止写类型的时候写错\r\n        movie: undefined\r\n    }\r\n    async componentDidMount() {\r\n        const resp = await MovieService.getMovieById(this.props.match.params.id)\r\n        if (resp.data) {\r\n            this.setState({\r\n                movie: resp.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.match.params.id)\r\n\r\n        return (\r\n            <MovieForm\r\n                movie={this.state.movie}\r\n                onSubmit={async (movie) => {\r\n                    const resp = await MovieService.edit(this.props.match.params.id, movie)\r\n                    if (resp.data) {\r\n                        return ''\r\n                    } else {\r\n                        return resp.err\r\n                    }\r\n                }} />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport MovieList from './movie/MovieList'\r\nimport AddMovie from './movie/AddMovie'\r\nimport EditMovie from './movie/EditMovie'\r\nimport { Layout, Menu } from 'antd'\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <NavLink to=\"/\">猫眼电影管理系统</NavLink>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >\r\n                            <Menu.Item key=\"1\" >\r\n                                <NavLink to=\"/movie\">电影列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\" >\r\n                                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Route path='/' component={Home} exact={true}></Route>\r\n                            <Route path='/movie' component={MovieList} exact={true}></Route>\r\n                            <Route path='/movie/add' component={AddMovie} ></Route>\r\n                            <Route path='/movie/edit/:id' component={EditMovie}></Route>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default _Layout;","import { Reducer } from \"react\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { IMovie } from \"../../services/MovieService\";\r\nimport {\r\n  DeleteAction,\r\n  MovieActions,\r\n  MovieChangeSwitchAction,\r\n  SaveMoviesAction,\r\n  SetConditionAction,\r\n  SetLoadingAction,\r\n} from \"../actions/MovieAction\";\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>; //全部变成必填了\r\n// 描述电影列表的状态类型\r\n/**\r\n * 电影状态\r\n */\r\nexport interface IMovieState {\r\n  /**\r\n   * 电影数组\r\n   */\r\n  data: IMovie[];\r\n  /**\r\n   * 查询条件\r\n   */\r\n  condition: IMovieCondition;\r\n  /**\r\n   * 总记录数\r\n   */\r\n  total: number;\r\n  /**\r\n   * 是否正在加载数据\r\n   */\r\n  isLoading: boolean;\r\n  /**\r\n   * 总页数\r\n   */\r\n  totalPage: number;\r\n}\r\n\r\nconst defaultState: IMovieState = {\r\n  data: [],\r\n  condition: {\r\n    page: 1,\r\n    limit: 10,\r\n    key: \"\",\r\n  },\r\n  total: 0,\r\n  isLoading: false,\r\n  totalPage: 0,\r\n};\r\n\r\n// function saveMovie(state:IMovieState, action: SaveMoviesAction):IMovieState {\r\n\r\n// }\r\ntype MovieReducer<A> = Reducer<IMovieState, A>;\r\nconst saveMovie: MovieReducer<SaveMoviesAction> = function (state, action) {\r\n  // return Object.assign({}, state, {\r\n  //   data: action.payload.movies,\r\n  //   total: action.payload.total,\r\n  // });\r\n  return {\r\n    ...state,\r\n    data: action.payload.movies,\r\n    total: action.payload.total,\r\n    totalPage: Math.ceil(action.payload.total / state.condition.limit),\r\n  };\r\n};\r\nconst setCondition: MovieReducer<SetConditionAction> = function (\r\n  state,\r\n  action\r\n) {\r\n  const newState = {\r\n    ...state,\r\n    condition: {\r\n      ...state.condition,\r\n      ...action.payload,\r\n    },\r\n  };\r\n  // 为什么新开一个？因为limit不方便获取，可能来自state，可能来自action.payload\r\n  newState.totalPage = Math.ceil(newState.total / newState.condition.limit);\r\n  return newState;\r\n};\r\nconst setLoading: MovieReducer<SetLoadingAction> = function (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: action.payload,\r\n  };\r\n};\r\nconst deleteMovie: MovieReducer<DeleteAction> = function (state, action) {\r\n  return {\r\n    ...state,\r\n    data: state.data.filter((m) => m._id !== action.payload),\r\n    total: state.total - 1,\r\n    totalPage: Math.ceil((state.totalPage - 1) / state.condition.limit),\r\n  };\r\n};\r\n\r\nconst changeSwitch: MovieReducer<MovieChangeSwitchAction> = function (\r\n  state,\r\n  action\r\n) {\r\n  // action.payload\r\n  // 1. 根据id找到对象\r\n  const movie = state.data.find((d) => d._id === action.payload.id);\r\n  if (!movie) {\r\n    return state;\r\n  }\r\n  // 2. 对象克隆\r\n  const newMovie = { ...movie };\r\n  newMovie[action.payload.type] = action.payload.newVal; // 索引签名\r\n  // 3. 将对象重新放入到数组\r\n  // 得到跟原来一模一样，只有改变的哪一项不同的数组\r\n  const newData = state.data.map((d) => {\r\n    if (d._id === action.payload.id) {\r\n      // 要改变的数据\r\n      return newMovie;\r\n    }\r\n    // 不需要改变的数据;\r\n    return d;\r\n  });\r\n  return {\r\n    ...state,\r\n    data: newData, //覆盖原来的属性  排错：action reducer 界面层层 排除问题\r\n  };\r\n};\r\nexport default function (\r\n  state: IMovieState = defaultState,\r\n  action: MovieActions\r\n) {\r\n  // action.    // 可辨识的联合\r\n  switch (action.type) {\r\n    case \"movie_delete\":\r\n      return deleteMovie(state, action);\r\n    case \"movies_save\":\r\n      return saveMovie(state, action);\r\n    case \"movie_setCondition\":\r\n      return setCondition(state, action);\r\n    case \"movies_setLoading\":\r\n      return setLoading(state, action);\r\n    case \"movie_switch\":\r\n      return changeSwitch(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport movieReducer, { IMovieState } from \"./MovieReducer\";\r\n/**\r\n * 整个网站的根状态\r\n */\r\nexport interface IRootState {\r\n  movie: IMovieState;\r\n}\r\nexport const rootReducer = combineReducers({\r\n  movie: movieReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { IRootState, rootReducer } from \"./reducer/RootReducer\";\r\nimport logger from \"redux-logger\"; // 想获得类型检查，需要安装类型库@types/react-router\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk as ThunkMiddleware<IRootState>, logger)\r\n);\r\n","import React from 'react';\r\nimport './index.css'\r\nimport Layout from './pages/Layout'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path=\"/\" component={Layout}>\r\n\r\n                </Route>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css'\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}